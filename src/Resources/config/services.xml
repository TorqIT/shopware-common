<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>

        <service id="Torq\Shopware\Common\Security\Encryption\EncryptionHandler">
            <argument>%env(string:default::TORQ_SHOPWARE_COMMON_ENCRYPTION_SECRET)%</argument>
        </service>

        <service id="Torq\Shopware\Common\Command\SalesChannelCreateCommand">
            <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
            <argument type="service" id="sales_channel.repository"/>
            <argument type="service" id="payment_method.repository"/>
            <argument type="service" id="shipping_method.repository"/>
            <argument type="service" id="country.repository"/>
            <argument type="service" id="category.repository"/>
            <argument type="service" id="snippet_set.repository"/>
            
            <tag name="console.command" />
        </service>

        <service id="Torq\Shopware\Common\Entity\EntityImporterExporterIdHasher">
            <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>         
        </service> 

        <service id="Torq\Shopware\Common\Command\EntityExportCommand">
            <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>         
            <argument type="service" id="Torq\Shopware\Common\Entity\EntityImporterExporterIdHasher"/>         
            <tag name="console.command" />
        </service> 

        <service id="Torq\Shopware\Common\Command\EntityImportCommand">
            <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>         
            <argument type="service" id="Torq\Shopware\Common\Entity\EntityImporterExporterIdHasher"/>         
            <tag name="console.command" />
        </service> 

        <service id="Torq\Shopware\Common\Command\TestEncryptionCommand">
            <argument type="service" id="Torq\Shopware\Common\Security\Encryption\EncryptionHandler"/>
            <tag name="console.command" />
        </service>

        <service id="Torq\Shopware\Common\SystemConfig\SystemConfigExtensions">
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="Torq\Shopware\Common\Security\Encryption\EncryptionHandler"/>
        </service>

        <service id="fragment.renderer.inline" class="Torq\Shopware\Common\Fragment\ShopwareInlineFragmentRenderer">
            <argument type="service" id="http_kernel"/>
            <argument type="service" id="event_dispatcher"/>
            <call method="setFragmentPath">
                <argument>%fragment.path%</argument>
            </call>
            <tag name="kernel.fragment_renderer" alias="inline"/>
        </service>

        <service id="Torq\Shopware\Common\Subscriber\ProductListingFilterSubscriber">
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Torq\Shopware\Common\Subscriber\PasswordValidationSubscriber">
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Torq\Shopware\Common\Subscriber\AdminAccessBlockerSubscriber">
            <argument>%shopware_administration.path_name%</argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="Twig\Environment"/>
            <tag name="kernel.event_subscriber" priority="255"/>
        </service>

        <service id="Torq\Shopware\Common\Rule\CustomerAddressCustomFieldRule">
            <tag name="shopware.rule.definition"/>
        </service>

        <service
            id="Torq\Shopware\Common\Domain\Login\B2BDecoratedLoginRoute"
            decorates="Shopware\Commercial\B2B\EmployeeManagement\Domain\Login\DecoratedLoginRoute"
            public="true"
            decoration-priority="100001"
        >
            <argument type="service" id=".inner"/>
            <argument type="service" id="b2b_employee.repository"/>
            <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CartRestorer"/>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
        </service>

        <service 
            id="Torq\Shopware\Common\SalesChannel\Context\SalesChannelContextPersisterDecorator"
            decorates="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"
        >
            <argument type="service" id=".inner"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="Shopware\Core\Checkout\Cart\CartPersister"/>
            <argument type="string">%shopware.api.store.context_lifetime%</argument>
        </service>

        <service id="Torq\Shopware\Common\Checkout\Customer\SalesChannel\ChangePasswordRouteDecorator"
            decorates="Shopware\Core\Checkout\Customer\SalesChannel\ChangePasswordRoute" public="true">
            <argument type="service" id="customer.repository"/>
            <argument type="service" id="b2b_employee.repository"/>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
        </service>

        <service id="Torq\Shopware\Common\Checkout\Customer\Validation\Constraint\EmployeePasswordMatchesValidator">
            <argument type="service" id="b2b_employee.repository"/>

            <tag name="validator.constraint_validator"/>
        </service>

        <service id="Torq\Shopware\Common\Controller\AuthControllerDecorated"
                decorates="Shopware\Storefront\Controller\AuthController">
            <argument type="service" id=".inner"/>
            <argument type="service" id="Shopware\Storefront\Page\Account\Login\AccountLoginPageLoader"/>
            <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\SendPasswordRecoveryMailRoute"/>
            <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\ResetPasswordRoute"/>
            <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\LoginRoute"/>
            <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\LogoutRoute"/>
            <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\ImitateCustomerRoute"/>
            <argument type="service" id="Shopware\Storefront\Checkout\Cart\SalesChannel\StorefrontCartFacade"/>
            <argument type="service" id="Shopware\Storefront\Page\Account\RecoverPassword\AccountRecoverPasswordPageLoader"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
            <call method="setTwig">
                <argument type="service" id="twig"/>
            </call>
        </service>

        <service id="Torq\Shopware\CustomPricing\Storefront\Controller\AsyncPricingController" public="true">
            <argument type="service" id="sales_channel.product.repository" />
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
            <call method="setTwig">
                 <argument type="service" id="twig"/>
             </call>
        </service>

    </services>
</container>
